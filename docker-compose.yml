version: '3.7'

x-reference-data:
  node-default: &node-default
    image: dev.node:8
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.node

services:
  db:
    container_name: db
    image: postgres:10.2-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=tcp
      - PGDATA=/pgdata
    volumes:
      - pgdata:/pgdata
  
  api:
    command: ["/app/gradlew", "bootRun"]
    container_name: api
    image: openjdk:11
    build:
      context: ./tcp-java/
      dockerfile: ./dockerfiles/Dockerfile.java
    volumes:
      - ./tcp-java:/app
      - gradle_cache:/root/.gradle
    working_dir: /app
    ports:
      - "8080:8080"
      - "5005:5005"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      JWT_KEY_STORE: ${JWT_KEY_STORE}
      JWT_KEY_STORE_PASS: ${JWT_KEY_STORE_PASS}
      JWT_KEYPAIR_ALIAS: ${JWT_KEYPAIR_ALIAS}
      JWT_KEYPAIR_PASS: ${JWT_KEYPAIR_PASS}
    depends_on:
      - db
  
  ui:
    command: bash -c "npm install && npm run start:docker"
    build:
      context: ./tcp-angular/
      dockerfile: local.Dockerfile
    volumes:
      - ./tcp-angular:/usr/src/app
      - node_cache:/home/node/.cache
    ports:
      - "4200:4200"
  
volumes:
  node_cache:
  pgdata:
  gradle_cache: